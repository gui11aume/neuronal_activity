[tool.poetry]
name = "neuronal-activity-project"
version = "0.1.0"
description = "A project for training VectorBert models using Lightning"
authors = ["Guillaume Filion <guillaume.filion@gmail.com>"]
readme = "README.md"
packages = [{include = "src/neuronal_activity"}]

[tool.poetry.dependencies]
python = "^3.10"  # Requires Python 3.10 or higher
lightning = "^2.0.9"  # PyTorch Lightning for easier deep learning
torch = "^2.0.1"  # PyTorch for deep learning
transformers = "^4.31.0"  # Hugging Face Transformers for NLP models
tqdm = "^4.65.0"  # Progress bar library
dvc = "^3.0.0"  # Data Version Control for managing data and ML pipelines

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.0"  # Fast Python linter and formatter
pytest = "^7.4.0"  # Testing framework
pre-commit = "^2.20.0"  # Pre-commit hooks for code discipline

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100  # Maximum line length
target-version = "py310"  # Target Python version for linting

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "ANN",  # flake8-annotations (type hints)
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
select = ["E", "F"]
ignore = ["E203", "E266", "E501", "F403", "F401"]  # Ignore specific error codes

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]   # ignore unused imports in __init__.py files

[tool.ruff.flake8-annotations]
allow-star-arg-any = true  # Allow using '*args: Any' in type annotations
suppress-none-returning = true  # Don't require explicit 'None' return type annotations
